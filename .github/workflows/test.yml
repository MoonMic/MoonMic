name: MoonMic Extension Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install server dependencies
      run: |
        cd server
        npm ci

    - name: Run server tests
      run: |
        cd server
        npm test --if-present

    - name: Validate extension files
      run: |
        # Check if required files exist
        test -f manifest.json || exit 1
        test -f content.js || exit 1
        test -f background.js || exit 1
        test -f popup.html || exit 1
        test -f popup.js || exit 1
        test -f overlay.css || exit 1
        
        # Check if icons exist
        test -f icons/icon16.png || exit 1
        test -f icons/icon48.png || exit 1
        test -f icons/icon128.png || exit 1
        
        # Check if server files exist
        test -f server/package.json || exit 1
        test -f server/server.js || exit 1
        
        echo "✅ All required files present"

    - name: Validate manifest.json
      run: |
        # Basic JSON validation
        python3 -m json.tool manifest.json > /dev/null
        echo "✅ manifest.json is valid JSON"

    - name: Check for security issues
      run: |
        # Check for hardcoded secrets
        if grep -r "ghp_" . --exclude-dir=.git --exclude=./.github/workflows/test.yml; then
          echo "❌ Found potential GitHub token in code"
          exit 1
        fi
        
        if grep -r "sk_" . --exclude-dir=.git --exclude=./.github/workflows/test.yml; then
          echo "❌ Found potential secret key in code"
          exit 1
        fi
        
        echo "✅ No obvious security issues found"

    - name: Test server health endpoint
      run: |
        cd server
        npm start &
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:3000/health || exit 1
        echo "✅ Server health endpoint working"
        
        # Kill server
        pkill -f "node server.js" || true 